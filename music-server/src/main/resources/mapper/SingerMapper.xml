<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjy.music.dao.SingerMapper">
    <resultMap id="BaseResultMap" type="com.cjy.music.domain.Singer" >
<!-- jdbcType指的是数据库里边的字段类型，property指的是daomain里边的java实体类-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
        <result column="birth" jdbcType="TIMESTAMP" property="birth"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="introduction" jdbcType="VARCHAR" property="introduction"/>

<!--它可以将查询到的复杂数据（比如查询到几个表中数据）
映射到一个结果集当中。如在实际应用中，有一个表为（用户角色表），
通过查询用户表信息展示页面，在（用户表）中存在用户角色表 id ，
在实际列表页的展示中，用户关注的是用户角色名称，而不是角色 id。
解决此类问题可以通过 resultMap 来映射自定义结果。
 使用 resultMap 做自定义结果映射，字段名可以不一致，
并且还可以指定要显示的列，比较灵活，应用也广泛(推荐使用)。-->
    </resultMap>
    <sql id="Base_Column_List">
        id,name,sex,pic,birth,location,introduction
    </sql>
    <insert id="insert" parameterType="com.cjy.music.domain.Singer">
        insert into singer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="pic != null">
                pic,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="introduction != null">
                introduction,
            </if>
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="pic != null">
                #{pic},
            </if>
            <if test="birth != null">
                #{birth},
            </if>
            <if test="location != null">
                #{location},
            </if>
            <if test="introduction != null">
                #{introduction},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.cjy.music.domain.Singer">
        update singer
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="pic != null">
                pic = #{pic},
            </if>
            <if test="birth != null">
                birth = #{birth},
            </if>
            <if test="location != null">
                location = #{location},
            </if>
            <if test="introduction != null">
               introduction = #{introduction},
            </if>
        </set>
            where id = #{id}
    </update>
    <delete id="delete" parameterType="java.lang.Integer">
        delete  from singer
        where id = #{id}
    </delete>
    <select id="selectByPrimarykey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select 
        <include refid="Base_Column_List"></include>
        from  singer
        where id = #{id}
    </select>
    <select id="allSinger" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from  singer
    </select>
    <select id="singerOfName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"></include>
        from  singer
        where name like #{name}
    </select>
    <select id="singerOfSex" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"></include>
        from  singer
        where sex = #{sex}
    </select>
</mapper>